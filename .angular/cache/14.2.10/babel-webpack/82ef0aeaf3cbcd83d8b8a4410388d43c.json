{"ast":null,"code":"import { Observable } from '../Observable';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\nexport function onErrorResumeNext(...sources) {\n  const nextSources = argsOrArgArray(sources);\n  return new Observable(subscriber => {\n    let sourceIndex = 0;\n\n    const subscribeNext = () => {\n      if (sourceIndex < nextSources.length) {\n        let nextSource;\n\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n\n    subscribeNext();\n  });\n}","map":{"version":3,"names":["Observable","argsOrArgArray","OperatorSubscriber","noop","innerFrom","onErrorResumeNext","sources","nextSources","subscriber","sourceIndex","subscribeNext","length","nextSource","err","innerSubscriber","undefined","subscribe","add","complete"],"sources":["/Users/tommy/project/nest_js/aha/user-dashboard/node_modules/rxjs/dist/esm/internal/observable/onErrorResumeNext.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\nexport function onErrorResumeNext(...sources) {\n    const nextSources = argsOrArgArray(sources);\n    return new Observable((subscriber) => {\n        let sourceIndex = 0;\n        const subscribeNext = () => {\n            if (sourceIndex < nextSources.length) {\n                let nextSource;\n                try {\n                    nextSource = innerFrom(nextSources[sourceIndex++]);\n                }\n                catch (err) {\n                    subscribeNext();\n                    return;\n                }\n                const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n                nextSource.subscribe(innerSubscriber);\n                innerSubscriber.add(subscribeNext);\n            }\n            else {\n                subscriber.complete();\n            }\n        };\n        subscribeNext();\n    });\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,SAASC,iBAAT,CAA2B,GAAGC,OAA9B,EAAuC;EAC1C,MAAMC,WAAW,GAAGN,cAAc,CAACK,OAAD,CAAlC;EACA,OAAO,IAAIN,UAAJ,CAAgBQ,UAAD,IAAgB;IAClC,IAAIC,WAAW,GAAG,CAAlB;;IACA,MAAMC,aAAa,GAAG,MAAM;MACxB,IAAID,WAAW,GAAGF,WAAW,CAACI,MAA9B,EAAsC;QAClC,IAAIC,UAAJ;;QACA,IAAI;UACAA,UAAU,GAAGR,SAAS,CAACG,WAAW,CAACE,WAAW,EAAZ,CAAZ,CAAtB;QACH,CAFD,CAGA,OAAOI,GAAP,EAAY;UACRH,aAAa;UACb;QACH;;QACD,MAAMI,eAAe,GAAG,IAAIZ,kBAAJ,CAAuBM,UAAvB,EAAmCO,SAAnC,EAA8CZ,IAA9C,EAAoDA,IAApD,CAAxB;QACAS,UAAU,CAACI,SAAX,CAAqBF,eAArB;QACAA,eAAe,CAACG,GAAhB,CAAoBP,aAApB;MACH,CAZD,MAaK;QACDF,UAAU,CAACU,QAAX;MACH;IACJ,CAjBD;;IAkBAR,aAAa;EAChB,CArBM,CAAP;AAsBH"},"metadata":{},"sourceType":"module"}